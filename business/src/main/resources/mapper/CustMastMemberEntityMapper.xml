<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nlsapi.core.business.mapper.cust.CustMastMemberEntityMapper">
  <resultMap id="BaseResultMap" type="com.nlsapi.core.business.entity.MastMemberEntity">
    <id column="mm_id" jdbcType="BIGINT" property="mmId" />
    <result column="mm_account" jdbcType="VARCHAR" property="mmAccount" />
    <result column="mm_password" jdbcType="CHAR" property="mmPassword" />
    <result column="mm_nickname" jdbcType="VARCHAR" property="mmNickname" />
    <result column="mm_created_at" jdbcType="TIMESTAMP" property="mmCreatedAt" />
    <result column="mm_updated_at" jdbcType="TIMESTAMP" property="mmUpdatedAt" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    mm_id, mm_account, mm_password, mm_nickname, mm_created_at, mm_updated_at
  </sql>
  <select id="selectByExample" parameterType="com.nlsapi.core.business.entity.MastMemberEntityExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from mast_member
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from mast_member
    where mm_id = #{mmId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from mast_member
    where mm_id = #{mmId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.nlsapi.core.business.entity.MastMemberEntityExample">
    delete from mast_member
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.nlsapi.core.business.entity.MastMemberEntity">
    insert into mast_member (mm_id, mm_account, mm_password,
      mm_nickname, mm_created_at, mm_updated_at
      )
    values (#{mmId,jdbcType=BIGINT}, #{mmAccount,jdbcType=VARCHAR}, #{mmPassword,jdbcType=CHAR},
      #{mmNickname,jdbcType=VARCHAR}, current_timestamp, current_timestamp
      )
  </insert>
  <insert id="insertSelective" parameterType="com.nlsapi.core.business.entity.MastMemberEntity">
    insert into mast_member
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="mmId != null">
        mm_id,
      </if>
      <if test="mmAccount != null">
        mm_account,
      </if>
      <if test="mmPassword != null">
        mm_password,
      </if>
      <if test="mmNickname != null">
        mm_nickname,
      </if>
      <if test="mmCreatedAt != null">
        mm_created_at,
      </if>
      <if test="mmUpdatedAt != null">
        mm_updated_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="mmId != null">
        #{mmId,jdbcType=BIGINT},
      </if>
      <if test="mmAccount != null">
        #{mmAccount,jdbcType=VARCHAR},
      </if>
      <if test="mmPassword != null">
        #{mmPassword,jdbcType=CHAR},
      </if>
      <if test="mmNickname != null">
        #{mmNickname,jdbcType=VARCHAR},
      </if>
      <if test="mmCreatedAt != null">
        #{mmCreatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="mmUpdatedAt != null">
        #{mmUpdatedAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.nlsapi.core.business.entity.MastMemberEntityExample" resultType="java.lang.Long">
    select count(*) from mast_member
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update mast_member
    <set>
      <if test="row.mmId != null">
        mm_id = #{row.mmId,jdbcType=BIGINT},
      </if>
      <if test="row.mmAccount != null">
        mm_account = #{row.mmAccount,jdbcType=VARCHAR},
      </if>
      <if test="row.mmPassword != null">
        mm_password = #{row.mmPassword,jdbcType=CHAR},
      </if>
      <if test="row.mmNickname != null">
        mm_nickname = #{row.mmNickname,jdbcType=VARCHAR},
      </if>
      <if test="row.mmCreatedAt != null">
        mm_created_at = #{row.mmCreatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="row.mmUpdatedAt != null">
        mm_updated_at = #{row.mmUpdatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update mast_member
    set mm_id = #{row.mmId,jdbcType=BIGINT},
      mm_account = #{row.mmAccount,jdbcType=VARCHAR},
      mm_password = #{row.mmPassword,jdbcType=CHAR},
      mm_nickname = #{row.mmNickname,jdbcType=VARCHAR},
      mm_created_at = #{row.mmCreatedAt,jdbcType=TIMESTAMP},
      mm_updated_at = #{row.mmUpdatedAt,jdbcType=TIMESTAMP}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.nlsapi.core.business.entity.MastMemberEntity">
    update mast_member
    <set>
      <if test="mmAccount != null">
        mm_account = #{mmAccount,jdbcType=VARCHAR},
      </if>
      <if test="mmPassword != null">
        mm_password = #{mmPassword,jdbcType=CHAR},
      </if>
      <if test="mmNickname != null">
        mm_nickname = #{mmNickname,jdbcType=VARCHAR},
      </if>
       mm_updated_at = current_timestamp,
    </set>
    where mm_id = #{mmId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.nlsapi.core.business.entity.MastMemberEntity">
    update mast_member
    set mm_account = #{mmAccount,jdbcType=VARCHAR},
      mm_password = #{mmPassword,jdbcType=CHAR},
      mm_nickname = #{mmNickname,jdbcType=VARCHAR},
      mm_created_at = #{mmCreatedAt,jdbcType=TIMESTAMP},
      mm_updated_at = #{mmUpdatedAt,jdbcType=TIMESTAMP}
    where mm_id = #{mmId,jdbcType=BIGINT}
  </update>
</mapper>
